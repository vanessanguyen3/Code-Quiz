{"version":3,"sources":["components/FinalScore/index.js","components/Layout/styles.js","components/Layout/index.js","components/Timer/styles.js","components/Timer/index.js","components/Button/index.js","components/Question/styles.js","components/Question/index.js","components/Quiz/index.js","hooks/useInterval.js","components/Container/index.js","components/StartPage/styles.js","components/StartPage/index.js","App.js","reportWebVitals.js","index.js"],"names":["FinalScore","score","StyledLayout","styled","div","Layout","children","TimerTopbar","Timer","timeLeft","Button","button","props","active","QuestionForm","StyledQuestion","AnswerList","AnswerButton","Result","Question","question","options","answer","onQuestionAnsweredCorrectly","onQuestionAnsweredIncorrectly","onNextQuestionClicked","useState","selectedAnswer","setSelectedAnswer","replace","map","option","i","onClick","index","Quiz","questions","onComplete","setTimeLeft","setQuestion","setScore","isAnswering","setIsAnswering","callback","delay","savedCallback","useRef","useLayoutEffect","current","useEffect","id","setInterval","clearInterval","useInterval","pointsPerScore","Math","floor","length","nextQuestion","questionAnsweredCorrectly","questionAnsweredIncorrectly","q","key","Container","StartPageHero","StartPage","onStartClicked","App","hasStarted","setHasStarted","hasFinished","setHasFinished","finalScore","setFinalScore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6dff943f.chunk.js","sourcesContent":["const FinalScore = ({ score }) => (\r\n  <div>\r\n    <h2>All done!</h2>\r\n    <br />\r\n    <p>Your final score is {score}</p>\r\n  </div>\r\n);\r\n\r\nexport default FinalScore;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledLayout = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n`;\r\n","import { StyledLayout } from './styles';\r\n\r\nconst Layout = ({ children }) => <StyledLayout>{children}</StyledLayout>;\r\n\r\nexport default Layout;\r\n","import styled from 'styled-components';\r\n\r\nexport const TimerTopbar = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  height: 48px;\r\n  float: right;\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  opacity: 0.75;\r\n  padding: 0 32px;\r\n`;\r\n","import { TimerTopbar } from './styles';\r\n\r\nconst Timer = ({ timeLeft }) => <TimerTopbar>Time: {timeLeft}</TimerTopbar>;\r\n\r\nexport default Timer;\r\n","import styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  color: white;\r\n  background-color: #4c2374;\r\n  border-radius: 4px;\r\n  padding: 12px 16px;\r\n\r\n  :active,\r\n  .active,\r\n  ${(props) => props.active} {\r\n    background-color: #381a56;\r\n  }\r\n\r\n  :hover {\r\n    background-color: #7235ad;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import styled from 'styled-components';\r\nimport Button from '../Button';\r\n\r\nexport const QuestionForm = styled.div``;\r\n\r\nexport const StyledQuestion = styled.div`\r\n  font-size: 36px;\r\n`;\r\n\r\nexport const AnswerList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  row-gap: 12px;\r\n  margin: 32px 0;\r\n`;\r\n\r\nexport const AnswerButton = styled(Button)`\r\n  width: 200px;\r\n`;\r\n\r\nexport const Result = styled.div`\r\n  opacity: 0.6;\r\n  font-size: 36px;\r\n`;\r\n","import { useState } from 'react';\r\nimport {\r\n  StyledQuestion,\r\n  AnswerList,\r\n  Result,\r\n  QuestionForm,\r\n  AnswerButton,\r\n} from './styles';\r\nimport Button from '../Button';\r\n\r\nconst Question = ({\r\n  question,\r\n  options,\r\n  answer,\r\n  onQuestionAnsweredCorrectly,\r\n  onQuestionAnsweredIncorrectly,\r\n  onNextQuestionClicked,\r\n}) => {\r\n  const [selectedAnswer, setSelectedAnswer] = useState(-1);\r\n\r\n  const submitAnswer = (index) => {\r\n    setSelectedAnswer(index);\r\n    if (index > -1) {\r\n      if (index === answer) {\r\n        onQuestionAnsweredCorrectly();\r\n      } else {\r\n        onQuestionAnsweredIncorrectly();\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleNextClicked = () => {\r\n    if (selectedAnswer > -1) {\r\n      onNextQuestionClicked();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <QuestionForm>\r\n      <StyledQuestion>{question.replace('{line}', '______')}</StyledQuestion>\r\n      <AnswerList>\r\n        {options.map((option, i) => (\r\n          <AnswerButton\r\n            key={i}\r\n            onClick={() => submitAnswer(i)}\r\n            active={selectedAnswer === i}\r\n          >\r\n            {i + 1}: {option}\r\n          </AnswerButton>\r\n        ))}\r\n      </AnswerList>\r\n      <Button onClick={handleNextClicked}>Next question</Button>\r\n      {selectedAnswer > -1 && (\r\n        <Result>{selectedAnswer === answer ? 'Correct!' : 'Wrong!'}</Result>\r\n      )}\r\n    </QuestionForm>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","import { useState } from 'react';\r\nimport useInterval from '../../hooks/useInterval';\r\nimport Timer from '../Timer';\r\nimport Question from '../Question';\r\n\r\nconst Quiz = ({ questions, onComplete }) => {\r\n  const [timeLeft, setTimeLeft] = useState(75);\r\n  const [question, setQuestion] = useState(0);\r\n  const [score, setScore] = useState(100);\r\n  const [isAnswering, setIsAnswering] = useState(true);\r\n\r\n  useInterval(() => {\r\n    if (isAnswering) {\r\n      setTimeLeft(timeLeft - 1);\r\n    }\r\n  }, 1000);\r\n\r\n  const pointsPerScore = Math.floor(100 / questions.length);\r\n\r\n  const nextQuestion = () => {\r\n    if (question + 1 === questions.length) {\r\n      onComplete(score);\r\n    } else {\r\n      setQuestion(question + 1);\r\n    }\r\n    setIsAnswering(true);\r\n  };\r\n\r\n  const questionAnsweredCorrectly = () => {\r\n    setIsAnswering(false);\r\n  };\r\n\r\n  const questionAnsweredIncorrectly = () => {\r\n    setIsAnswering(false);\r\n    setTimeLeft(timeLeft - 10);\r\n    setScore(score - pointsPerScore);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Timer timeLeft={timeLeft} />\r\n      {questions.map((q, i) => (\r\n        <>\r\n          {i === question && (\r\n            <Question\r\n              {...q}\r\n              key={i}\r\n              onNextQuestionClicked={nextQuestion}\r\n              onQuestionAnsweredCorrectly={questionAnsweredCorrectly}\r\n              onQuestionAnsweredIncorrectly={questionAnsweredIncorrectly}\r\n            />\r\n          )}\r\n        </>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n","import { useEffect, useLayoutEffect, useRef } from 'react';\r\n\r\nexport default function useInterval(callback, delay) {\r\n  const savedCallback = useRef(callback);\r\n  useLayoutEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  useEffect(() => {\r\n    if (!delay && delay !== 0) {\r\n      return;\r\n    }\r\n\r\n    const id = setInterval(() => savedCallback.current(), delay);\r\n    return () => clearInterval(id);\r\n  }, [delay]);\r\n}\r\n","import styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nexport default Container;\r\n","import styled from 'styled-components';\r\n\r\nexport const StartPageHero = styled.div`\r\n  p {\r\n    font-weight: 600;\r\n  }\r\n`;\r\n","import Button from '../Button';\r\nimport Container from '../Container';\r\nimport { StartPageHero } from './styles';\r\n\r\nconst StartPage = ({ onStartClicked }) => (\r\n  <StartPageHero>\r\n    <Container>\r\n      <h1>Coding Quiz Challenge</h1>\r\n      <p>\r\n        Try to answer the following code-related questions within the time\r\n        limit. Keep in mind that incorrect answers will penalize your score/time\r\n        by 10 seconds!\r\n      </p>\r\n      <Button onClick={onStartClicked}>Start Quiz</Button>\r\n    </Container>\r\n  </StartPageHero>\r\n);\r\n\r\nexport default StartPage;\r\n","import { useState } from 'react';\nimport FinalScore from './components/FinalScore';\nimport Layout from './components/Layout';\nimport Quiz from './components/Quiz';\nimport StartPage from './components/StartPage';\nimport questions from './questions.json';\n\nconst App = () => {\n  const [hasStarted, setHasStarted] = useState(false);\n  const [hasFinished, setHasFinished] = useState(false);\n  const [finalScore, setFinalScore] = useState(-1);\n\n  const onStartClicked = () => {\n    setHasStarted(true);\n  };\n\n  const onComplete = (score) => {\n    setHasFinished(true);\n    setFinalScore(score);\n  };\n\n  return (\n    <Layout>\n      {!hasStarted && !hasFinished && (\n        <StartPage onStartClicked={onStartClicked} />\n      )}\n      {hasStarted && !hasFinished && (\n        <Quiz questions={questions} onComplete={onComplete} />\n      )}\n      {hasStarted && hasFinished && <FinalScore score={finalScore} />}\n    </Layout>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}